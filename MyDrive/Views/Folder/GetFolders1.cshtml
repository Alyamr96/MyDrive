@model MyDrive.ViewModels.FoldersandFilesViewModel
@{
    ViewBag.Title = "GetFolders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .myCustomContainer {
        display: flex;
        flex-wrap: wrap;
    }

    .CustomFolder {
        display: flex;
        flex-direction: column;
        margin: 30px;
    }

        .CustomFolder button {
            display: flex;
        }

        .CustomFolder span {
            display: block;
            padding-left: 30px;
            width: 150px;
            font-family: Arial, Helvetica, sans-serif;
            color: black;
        }

        .CustomFolder .myFolderIcon {
            font-size: 100px;
            color: #CC5500;
        }

    .myCustomContainerForFiles {
        display: flex;
        flex-wrap: wrap;
    }

    .CustomFile {
        display: flex;
        flex-direction: column;
        margin: 40px;
    }

        .CustomFile button {
            display: flex;
        }

        .CustomFile span {
            display: block;
            padding-left: 0;
            width: 150px;
            font-family: Arial, Helvetica, sans-serif;
            color: black;
        }

        .CustomFile .myFolderIcon {
            font-size: 100px;
            color: #CC5500;
        }

    .mycontainer {
        display: flex;
    }

        .mycontainer .Second-button {
            margin-left: 15px;
        }
</style>

<!--<h2>Folders</h2>-->

<div class="mycontainer">
    <p>
        <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#createFolderModal">@MyDrive.Resources.Language.Create_Folder</a>
    </p>

    <p class="Second-button">
        <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#uploadFileModal">@MyDrive.Resources.Language.Upload_File</a>
    </p>
</div>
@using (Html.BeginForm("UploadFiles", "Folder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal fade" id="uploadFileModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Upload File</h2>
                </div>
                <div class="modal-body">
                    <form id="uploadFileModal">
                        <label>Choose File:</label>
                        <input type="file" id="userFile" name="userFile" /><br />
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="btn-group">
                        <input type="submit" value="Upload" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("CreateFolder", "Folder"))
{
    <div class="modal fade" id="createFolderModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Create Folder</h2>
                </div>
                <div class="modal-body">
                    <form id="createFolderModal">
                        <label>Folder Name</label>
                        @Html.TextBox("Name")
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="btn-group">
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="myCustomContainer">


    @for (int i = 0; i < Model.Folders.Count(); i++)
    {

    <div class="CustomFolder">
        <a href="~/Folder/RenameFolder/@Model.Folders[i].Path" class="btn-link"><i class="fas fa-pen"></i></a>
        <button class="btn-link my-delete" data-folder-path="@Model.Folders[i].Path"><i class="fas fa-backspace"></i></button>
        <!--<button class="btn-link js-delete" data-folder-path="@Model.Folders[i].Path"><i class="fas fa-backspace"></i></button>-->
        <a href="/Folder/GetFolderFromPath/@Model.Folders[i].Path"> <i class="fas fa-folder myFolderIcon"></i><span>@Model.Folders[i].Name</span></a>
    </div>
    }
</div>


<div class="modal fade" id="ConfirmPasswordModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordForm">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "password", Textmode = "Password" })
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSave1" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="myCustomContainerForFiles">
    @foreach (var fileName in Model.Files)
    {
        string filePathNormalized = @fileName.Path.Replace(@"\", ";");
        string finalPathNormalized = filePathNormalized.Replace(".", "'");


        <div class="CustomFile">
            @if (User.IsInRole("CanManageUsers"))
            {
                <a href="~/Folder/RenameFile/@finalPathNormalized" class="btn-link"><i class="fas fa-pen"></i></a>
            }
            @if (User.IsInRole("CanManageUsers") || User.IsInRole("DeleteFolders"))
            {
                <button class="btn-link js-file-delete" data-file-path="@finalPathNormalized"><i class="fas fa-backspace"></i></button>
            }
            <a href="~/files/@fileName.Path" target="_blank"> <i class="fas fa-file myFolderIcon"></i><span>@fileName.Name</span></a>
        </div>
    }
</div>
<input id="testPurpose" type="hidden" />
@section scripts
{
    <script>
        $(document).ready(function () {
            $(".myCustomContainer").on("click", ".js-delete", function () {
                var button = $(this);
                if (confirm("Are you sure you want to delete this folder?")) {
                    $.ajax({
                        url: "/Folder/DeleteFolder/" + button.attr("data-folder-path"),
                        success: function () {
                            console.log("success");
                            button.parent("div").remove();
                        }
                    });
                }
            });

            $(".myCustomContainerForFiles").on("click", ".js-file-delete", function () {
                var button = $(this);
                if (confirm("Are you sure you want to delete this file?")) {
                    $.ajax({
                        url: "/Folder/DeleteFile/" + button.attr("data-file-path"),
                        success: function () {
                            console.log("success");
                            button.parent("div").remove();
                        }
                    });
                }
            });

            $("#btnSave1").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordForm").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPassword",
                    data: (ConfirmPasswordForm ? ConfirmPasswordForm + "&" : "") + "folderPath=" + Myid,
                    success: function () {
                        window.location.href = "/Folder/GetFolders1"
                    }
                })
            });

            $(".myCustomContainer").on("click", ".my-delete", function () {
                var button = $(this);
                $("#ConfirmPasswordModal").modal('show');
                $("#testPurpose").val(button.attr("data-folder-path"));
            });

            
        });
      
    </script>
}