@model MyDrive.ViewModels.FoldersandFilesViewModel
@{
    ViewBag.Title = "GetFolders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .myCustomContainer {
        display: flex;
        flex-wrap: wrap;
    }

    .CustomFolder {
        display: flex;
        flex-direction: column;
        margin: 30px;
    }

        .CustomFolder button {
            display: flex;
        }

        .CustomFolder span {
            display: block;
            padding-left: 30px;
            width: 150px;
            font-family: Arial, Helvetica, sans-serif;
            color: black;
        }

        .CustomFolder .myFolderIcon {
            font-size: 100px;
            color: #CC5500;
        }

    .myCustomContainerForFiles {
        display: flex;
        flex-wrap: wrap;
    }

    .CustomFile {
        display: flex;
        flex-direction: column;
        margin: 40px;
    }

        .CustomFile button {
            display: flex;
        }

        .CustomFile span {
            display: block;
            padding-left: 0;
            width: 150px;
            font-family: Arial, Helvetica, sans-serif;
            color: black;
        }

        .CustomFile .myFolderIcon {
            font-size: 100px;
            color: #CC5500;
        }

    .mycontainer {
        display: flex;
    }

    .Companies {
        display: flex;
        flex-wrap: wrap;
    }

    .Companies .CustomFolder {
        display: flex;
        flex-direction: column;
        margin: 30px;
    }

    .Companies .CustomFolder span {
        display: block;
        padding-left: 0;
        width: 100px;
        font-family: Arial, Helvetica, sans-serif;
        color: black;
        text-align: center;
    }

    .Companies .CustomFolder img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
    }
</style>

<!--<h2>Folders</h2>-->

<div class="mycontainer">
   <!-- <p>
        <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#createFolderModal">@MyDrive.Resources.Language.Create_Folder</a>
    </p> -->

    <p class="Second-button">
        <!--<a href="#" class="btn btn-primary" data-toggle="modal" data-target="#uploadFileModal">@MyDrive.Resources.Language.Upload_File</a>-->
        @if (Model.UserPermissions.Contains("Upload File"))
        {
            <button class="btn btn-primary" id="UploadFileButton">@MyDrive.Resources.Language.Upload_File</button>

        }
    </p>
</div>
@using (Html.BeginForm("UploadFiles", "Folder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal fade" id="uploadFileModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Upload File</h2>
                </div>
                <div class="modal-body">
                    <form id="uploadFileModal">
                        <label>Choose File:</label>
                        <input type="file" id="userFile" name="userFile" /><br />
                        <label>Choose Which Companies To View The File</label>
                        @foreach (var item in Model.AvailableCompanies)
                        {
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox"
                                           name="SelectedCompanies"
                                           value="@item.Value"
                                           @if (Model.SelectedCompanies.Contains(item.Value)) { <text> checked </text> } /> @item.Text
                                    </label>
                                </div>
                            }
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="btn-group">
                        <input type="submit" value="Upload" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("CreateFolder", "Folder"))
{
    <div class="modal fade" id="createFolderModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">Create Folder</h2>
                </div>
                <div class="modal-body">
                    <form id="createFolderModal">
                        <label>Folder Name</label>
                        @Html.TextBox("Name")
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="btn-group">
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="ConfirmPasswordToUploadFileModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordToUploadFileForm">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFolderDelete", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSaveToUploadFile" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!--<div class="modal fade" id="RenameFolderModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Rename Folder</h2>
            </div>
            <div class="modal-body">
                <form id="RenameFolderForm">
                    <label>Enter New Folder Name</label>
                    @Html.TextBoxFor(m => m.RenameFolderName, new {@class = "form-control"})
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="RenameFolderButton" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>-->

<div class="modal fade" id="RenameFileModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Rename Folder</h2>
            </div>
            <div class="modal-body">
                <form id="RenameFileForm">
                    <label>Enter New Folder Name</label>
                    @Html.TextBoxFor(m => m.RenameFolderName, new { @class = "form-control" })
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="RenameFileButton" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!--<div class="myCustomContainer">


    @for (int i = 0; i < Model.Folders.Count(); i++)
    {

    <div class="CustomFolder">
        <a href="~/Folder/RenameFolder/@Model.Folders[i].Path" class="btn-link"><i class="fas fa-pen"></i></a>
        <button class="btn-link my-rename" data-folder-path="@Model.Folders[i].Path"><i class="fas fa-pen"></i></button>
        <button class="btn-link my-delete" data-folder-path="@Model.Folders[i].Path"><i class="fas fa-backspace"></i></button>
        <button class="btn-link js-delete" data-folder-path="@Model.Folders[i].Path"><i class="fas fa-backspace"></i></button>
        <a href="/Folder/GetFolderFromPath/@Model.Folders[i].Path"> <i class="fas fa-folder myFolderIcon"></i><span>@Model.Folders[i].Path</span></a>
    </div>
    }
</div>-->
<div>
    @if(Model.AttachFileToUpload == true)
            {
                <p>Attach File First To Upload It Please</p>
            }
</div>
<div><h2>Companies</h2></div>

<div class="Companies">
    @for (int i = 0; i < Model.Companies.Count(); i++)
    {
        string replaceString = Model.Companies[i].LogoPath.Replace(@"\", "/");
        string[] imagePath = replaceString.Split('/');
        string imagePath1 = imagePath[imagePath.Length - 1];
        string replacePath = Model.Companies[i].Path.Replace(@"\", "/");
        string[] words = replacePath.Split('/');
        string FinalPath = words[words.Length - 1];
        <div class="CustomFolder">
            <button class="btn-link my-delete" data-folder-path="@Model.Companies[i].Id"><i class="fas fa-backspace"></i></button>
            <a href="/Folder/GetFolderFromPath/@FinalPath"><img src="~/Images/@imagePath1" alt="Company logo" /><span>@FinalPath</span></a>
        </div>
    }
</div>

<div class="modal fade" id="ConfirmPasswordModalForCompanyDelete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordFormForCompanyDelete">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFolderDelete1", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSaveForCompanyDelete" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ConfirmPasswordModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordForm">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFolderDelete2", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSave1" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ConfirmPasswordModalForRename">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordFormForRename">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFolderRename", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSaveRenameFolder" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div><h2>Files</h2></div>
<div class="myCustomContainerForFiles">
    @foreach (var fileName in Model.Files)
    {
        {
            string[] CompaniesThatViewFile1 = new string[1000];
            List<string> CompaniesThatViewFile = new List<string>();
            foreach (var record in Model.CompaniesToViewFiles)
            {
                string absolotePath = Model.AbsolotePath + fileName.Path;
                if (record.FilePath == absolotePath)
                {
                    CompaniesThatViewFile.Add(record.CompanyName);
                }
            }
            CompaniesThatViewFile1 = CompaniesThatViewFile.ToArray();
            string[] userCompanies = Model.CompaniesUserIn.ToArray();
            if (userCompanies.Intersect(CompaniesThatViewFile1).Any())
            {


                string filePathNormalized = @fileName.Path.Replace(@"\", ";");
                string finalPathNormalized = filePathNormalized.Replace(".", "'");


                <div class="CustomFile">
                    <!-- <a href="~/Folder/RenameFile/@finalPathNormalized" class="btn-link"><i class="fas fa-pen"></i></a>-->
                    <!--<button class="btn-link myFile-rename" data-file-path="@finalPathNormalized"><i class="fas fa-pen"></i></button>-->
                    <button class="btn-link js-file-delete" data-file-path="@finalPathNormalized"><i class="fas fa-backspace"></i></button>
                    <a href="~/files/@fileName.Path" target="_blank"> <i class="fas fa-file myFolderIcon"></i><span>@fileName.Name</span></a>
                </div>
            }
        }
    }
</div>

<div class="modal fade" id="ConfirmPasswordModalForFiles">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordFormForFiles">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFileDelete", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSave2" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ConfirmPasswordModalForFileRename">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Confirm Password</h2>
            </div>
            <div class="modal-body">
                <form id="ConfirmPasswordFormForFileRename">
                    @Html.LabelFor(m => m.Password)
                    @Html.Password("password", "", new { id = "passwordForFileRename", Textmode = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </form>
            </div>
            <div class="modal-footer">
                <div class="btn-group">
                    <a href="#" id="btnSaveRenameFile" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<input id="testPurpose" type="hidden" />
@section scripts
{
    <script>
        $(document).ready(function () {
            /*$(".myCustomContainer").on("click", ".js-delete", function () {
                var button = $(this);
                if (confirm("Are you sure you want to delete this folder?")) {
                    $.ajax({
                        url: "/Folder/DeleteFolder/" + button.attr("data-folder-path"),
                        success: function () {
                            console.log("success");
                            button.parent("div").remove();
                        }
                    });
                }
            });

            $(".myCustomContainerForFiles").on("click", ".js-file-delete", function () {
                var button = $(this);
                if (confirm("Are you sure you want to delete this file?")) {
                    $.ajax({
                        url: "/Folder/DeleteFile/" + button.attr("data-file-path"),
                        success: function () {
                            console.log("success");
                            button.parent("div").remove();
                        }
                    });
                }
            });*/

            $("#btnSave1").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordForm").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPassword",
                    data: (ConfirmPasswordForm ? ConfirmPasswordForm + "&" : "") + "folderPath=" + Myid,
                    success: function (res) {
                        if (res) {
                            window.location.href = "/Folder/GetFolders1"
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }
                    }
                })
            });

            $("#btnSave2").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordFormForFiles").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPasswordForFile",
                    data: (ConfirmPasswordForm ? ConfirmPasswordForm + "&" : "") + "filePath=" + Myid,
                    success: function (res) {
                        if (res) {
                            window.location.href = "/Folder/GetFolders1"
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }
                        
                    }
                })
            });

            $("#btnSaveRenameFolder").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordFormForRename").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPasswordForFolderRename",
                    data: ConfirmPasswordForm,
                    success: function (res) {
                        if (res) {
                            $("#ConfirmPasswordModalForRename").modal('hide');
                            $("#RenameFolderModal").modal('show');
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }
                        
                    }
                })
            });

            $("#RenameFolderButton").click(function () {
                var RenameFolderForm = $("#RenameFolderForm").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/RenameFolderModal",
                    data: (RenameFolderForm ? RenameFolderForm + "&" : "") + "folderPath=" + Myid,
                    success: function (res) {
                        if (res) {
                            window.location.href = "/Folder/GetFolders1"
                        }
                        else {
                            confirm("please enter a folder name")
                        }
                    }
                })
            });

            $("#btnSaveRenameFile").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordFormForFileRename").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPasswordForFileRename",
                    data: ConfirmPasswordForm,
                    success: function (res) {
                        if (res) {
                            $("#ConfirmPasswordModalForFileRename").modal('hide');
                            $("#RenameFileModal").modal('show');
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }

                    }
                })
            });

            $("#RenameFileButton").click(function () {
                var RenameFolderForm = $("#RenameFileForm").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/RenameFileModal",
                    data: (RenameFileForm ? RenameFileForm + "&" : "") + "filePath=" + Myid,
                    success: function (res) {
                        if (res) {
                            window.location.href = "/Folder/GetFolders1"
                        }
                        else {
                            confirm("please enter a file name")
                        }
                    }
                })
            });

            $(".myCustomContainer").on("click", ".my-delete", function () {
                var button = $(this);
                $("#ConfirmPasswordModal").modal('show');
                $("#testPurpose").val(button.attr("data-folder-path"));
            });

            $(".myCustomContainerForFiles").on("click", ".js-file-delete", function () {
                var button = $(this);
                $("#ConfirmPasswordModalForFiles").modal('show');
                $("#testPurpose").val(button.attr("data-file-path"));
            });

            $(".myCustomContainer").on("click", ".my-rename", function () {
                var button = $(this);
                $("#ConfirmPasswordModalForRename").modal('show');
                $("#testPurpose").val(button.attr("data-folder-path"));
            });

            $(".myCustomContainerForFiles").on("click", ".myFile-rename", function () {
                var button = $(this);
                $("#ConfirmPasswordModalForFileRename").modal('show');
                $("#testPurpose").val(button.attr("data-folder-path"));
            });

            $(".mycontainer").on("click", "#UploadFileButton", function () {
                $("#ConfirmPasswordToUploadFileModal").modal('show');
            });

            $("#btnSaveToUploadFile").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordToUploadFileForm").serialize();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPasswordForFolderRename",
                    data: ConfirmPasswordForm,
                    success: function (res) {
                        if (res) {
                            $("#ConfirmPasswordToUploadFileModal").modal('hide');
                            $("#uploadFileModal").modal('show');
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }

                    }
                })
            });

            $(".Companies").on("click", ".my-delete", function () {
                var button = $(this);
                $("#ConfirmPasswordModalForCompanyDelete").modal('show');
                $("#testPurpose").val(button.attr("data-folder-path"));
            });

            $("#btnSaveForCompanyDelete").click(function () {
                var ConfirmPasswordForm = $("#ConfirmPasswordFormForCompanyDelete").serialize();
                var Myid = $("#testPurpose").val();

                $.ajax({
                    type: "POST",
                    url: "/Folder/ConfirmPasswordForCompanyDelete",
                    data: (ConfirmPasswordForm ? ConfirmPasswordForm + "&" : "") + "id=" + Myid,
                    success: function (res) {
                        if (res) {
                            console.log("success")
                            window.location.href = "/DriveUsers/DisplayUsers"
                        }
                        else {
                            confirm("Please Enter A Valid Password")
                        }
                    }
                })
            });

            
        });
      
    </script>
}